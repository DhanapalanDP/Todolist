{"version":3,"sources":["components/form.js","components/Todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todos","inputText","setInputText","setTodos","setStatus","status","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","Todolist","filteredTodos","Apple","useState","setFilteredTodos","useEffect","localTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todolocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c939e7e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Form({todos, inputText, setInputText, setTodos, status, setStatus}) {\r\n    const inputTexHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n    const toDoSubmit =  (e) => {\r\n        e.preventDefault();\r\n        if(inputText!==\"\"){\r\n           setTodos([...todos, {text: inputText, completed: false, id: Math.random()*1000}])\r\n        }\r\n       \r\n        setInputText(\"\")\r\n    }\r\n    const workStatus = (e) =>{\r\n      setStatus(e.target.value);\r\n\r\n    }\r\n    return (\r\n        <form >\r\n        <input value={inputText} onChange={inputTexHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={toDoSubmit} className=\"todo-button\"  type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={workStatus} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Todo({text,todo,todos,setTodos}) {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((e)=> e.id !== todo.id))\r\n    };\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map((item)=> {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed? \"completed\": ''}`}>{text}</li>\r\n            <button  onClick={completeHandler}  className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function Todolist({todos,status, setTodos, filteredTodos}) {\r\n   \r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filteredTodos.map((todo, key={}) => \r\n                    <Todo key={todo.id}  todos={todos} todo={todo}  setTodos={setTodos} text={todo.text}/>)\r\n                   \r\n                }\r\n                  \r\n            </ul>   \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './components/form';\nimport Todolist from './components/todolist';\n\n\nfunction Apple() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"All\");\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  useEffect(() => {\n    localTodos()\n  }, [])\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n    \n  }, [todos,status])\n\n  //functions\n  const filterHandler = () =>{\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo)=> todo.completed === true\n        ))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo)=>todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  } \n  //save local\n\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos',JSON.stringify(todos))\n  }\n  const localTodos = () => {\n    if(localStorage.getItem('todos'===null)){\n      localStorage.setItem('todos',JSON.stringify([]));\n    }else{\n      const todolocal = JSON.parse(localStorage.getItem('todos',JSON.stringify(todos)));\n      setTodos(todolocal);\n       \n    }\n  }\n  return (\n    <div className=\"App\">\n        <header>\n          <h1>Todo List</h1>\n        </header>\n        <Form todos={todos} inputText={inputText} setTodos={setTodos} setInputText={setInputText}    status={status} setStatus={setStatus}/>\n        {\n          todos!=[] && <Todolist status={status} todos={todos} filteredTodos={filteredTodos}  setTodos={setTodos}/>\n        }\n        \n    </div>\n  );\n}\n\nexport default Apple;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}